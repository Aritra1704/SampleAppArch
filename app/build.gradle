apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"


    defaultConfig {
        applicationId "sampleproj.charlesng0209.com.sampleapparch"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }
    dataBinding {
        enabled = true
    }
    buildTypes {
        debug {
            minifyEnabled false
            ext.enableCrashlytics = false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    flavorDimensions "default"
    productFlavors {
        // When building a variant that uses this flavor, the following configurations
        // override those in the defaultConfig block.
        dev {
            // To avoid using legacy multidex when building from the command line,
            // set minSdkVersion to 21 or higher. When using Android Studio 2.3 or higher,
            // the build automatically avoids legacy multidex when deploying to a device running
            // API level 21 or higherâ€”regardless of what you set as your minSdkVersion.
            minSdkVersion 21
            versionNameSuffix "-dev"
            applicationIdSuffix '.dev'
            // The following configuration limits the "dev" flavor to using
            // English stringresources and xxhdpi screen-density resources.
            resConfigs "en", "xxhdpi"
        }

        prod {
            // If you've configured the defaultConfig block for the release version of
            // your app, you can leave this block empty and Gradle uses configurations in
            // the defaultConfig block instead. You still need to create this flavor.
            // Otherwise, all variants use the "dev" flavor configurations.
        }
    }
    dexOptions {
        preDexLibraries true
        maxProcessCount 8
        // Instead of setting the heap size for the DEX process, increase Gradle's
        // heap size to enable dex-in-process. To learm more, read the next section.
        // javaMaxHeapSize "2048m"
    }
    aaptOptions {
        cruncherEnabled false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //app arche dependencies
    //dagger 2
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    implementation 'com.android.support:appcompat-v7:26.0.2'
    implementation 'com.android.support:design:26.0.2'
    implementation 'com.android.support:support-vector-drawable:26.0.2'
    implementation 'android.arch.lifecycle:extensions:1.0.0-alpha9'
    implementation 'android.arch.lifecycle:runtime:1.0.0-alpha9'
    annotationProcessor 'android.arch.lifecycle:compiler:1.0.0-alpha9'
    //    implementation 'com.google.dagger:dagger:2.11'
    //    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    //    implementation 'io.reactivex.rxjava2:rxjava:2.1.0'
    implementation 'com.android.support:support-v4:26.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:recyclerview-v7:26.0.2'
    testImplementation 'junit:junit:4.12'
    //    annotationProcessor 'com.google.dagger:dagger-compiler:2.11'
    implementation project(':feedentry')
    implementation 'com.facebook.stetho:stetho:1.5.0'
    //    implementation project(':location')
    //    implementation project(':communitcation-fragments')
}
